#include <Wire.h>
#include "rgb_lcd.h"

int micPin = A0;
int micValue;

rgb_lcd lcd;

const int colorR = 255;
const int colorG = 0;
const int colorB = 0;

// Define sound thresholds in decibels
const int fairThreshold = 60;   // Fair sound threshold (dB)
const int dangerousThreshold = 85;  // Dangerous sound threshold (dB)

// Define the analog input range (0 to 1023) for a mic
const int maxAnalogValue = 1023;

void setup() {
    // Set up the LCD's number of columns and rows
    lcd.begin(16, 2);
    lcd.setRGB(0, 255, 0);  // Red color for initial display
   
    // Print initial messages to the LCD
    lcd.print("Decibel Reader");
    lcd.setCursor(0, 1);  // Move to second line
    lcd.print("Version 1.0");
    delay(1000);
}

void loop() {
    // Read the microphone analog value
    micValue = analogRead(micPin);

    // Map the microphone value (0-1023) to a decibel range
    // Here, we assume a simple mapping where 0 is 0 dB and 1023 is a maximum decibel value of 100 dB
    int dB = map(micValue, 0, maxAnalogValue, 0, 100);

    // Clear the entire display before updating it
    lcd.clear();

    // Display the decibel value on the second line
    lcd.setCursor(0, 1);
    lcd.print("dB: ");
    lcd.print(dB);

    // Check if the sound level is fair or dangerous
    if (dB <= fairThreshold) {
        lcd.setRGB(0, 255, 0);  // Green for fair sound
        lcd.setCursor(0, 0);
        lcd.print("Fair Sound");
    }
    else if (dB > dangerousThreshold) {
        lcd.setRGB(255, 0, 0);  // Red for dangerous sound
        lcd.setCursor(0, 0);
        lcd.print("Dangerous");
    }
    else {
        lcd.setRGB(255, 255, 0);  // Yellow for loud but fair sound
        lcd.setCursor(0, 0);
        lcd.print("Loud Sound");
    }

    delay(500);  // Delay before updating the display again
}
